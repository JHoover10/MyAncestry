@page "/"

@inject IDataRepository dataRepository

<MudTable Items="@surnameFrequency" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Surname</MudTh>
        <MudTh>Number of People</MudTh>
        <MudTh>Percentage</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Surname">@context.Item1</MudTd>
        <MudTd DataLabel="Number of People">@context.Item2</MudTd>
        <MudTd DataLabel="Percentage">@($"{context.Item2 % totalPeople}%")</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<MudDivider Style="padding-top: 15px; padding-bottom: 15px"></MudDivider>

<MudText>Total unique surnames: @uniqueSurnames</MudText>
<MudText>Total people: @totalPeople</MudText>

<MudDivider Style="padding-top: 15px; padding-bottom: 15px"></MudDivider>

<MudText>Missing first names: @missingFirstNames</MudText>
<MudText>Missing last names: @missingLastNames</MudText>
<MudText>Missing birthdays: @missingBirthdays</MudText>
<MudText>Missing marriage dates: @missingMarriages</MudText>

@code 
{
    int uniqueSurnames;
    int totalPeople;
    int missingFirstNames;
    int missingLastNames;
    int missingBirthdays;
    int missingMarriages;
    List<(string, int)> surnameFrequency;
    bool loading;

    protected override async Task OnInitializedAsync()
    {
        uniqueSurnames = dataRepository.Query<Person, string>(selector: person => person.LastName).Distinct().Count();
        totalPeople = dataRepository.Query<Person, Person>().Count();
        surnameFrequency = dataRepository.Query<Person, string>(selector: person => person.LastName).GroupBy(x => x).OrderByDescending(x => x.Count()).Select(x => (x.Key, x.Count())).ToList();
        missingFirstNames = dataRepository.Query<Person, Person>(person => string.IsNullOrWhiteSpace(person.FirstName)).Count();
        missingLastNames = dataRepository.Query<Person, Person>(person => string.IsNullOrWhiteSpace(person.LastName)).Count();
        missingBirthdays = totalPeople - dataRepository.Query<Event, Event>(evt => evt.EventType == EventType.Birth).Count();
        missingMarriages = dataRepository.Query<Family, Family>().Count(); dataRepository.Query<Event, Event>(evt => evt.EventType == EventType.Marriage).Count();
    }
}